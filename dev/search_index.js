var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API Reference","title":"API Reference","text":"CurrentModule = UncertainHistogramming","category":"page"},{"location":"api/#UncertainHistogramming-API","page":"API Reference","title":"UncertainHistogramming API","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Documentation for UncertainHistogramming.","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Modules = [UncertainHistogramming]","category":"page"},{"location":"api/#UncertainHistogramming.moment_list","page":"API Reference","title":"UncertainHistogramming.moment_list","text":"const moment_list::SVector\n\nConvenience list of all moment type symbols used. Each of these  Symbols are @evaluated into an empty struct trait <: Moment.\n\nUncertainHistogramming.moment_list\n\n\n\n\n\n","category":"constant"},{"location":"api/#UncertainHistogramming.ContinuousDistribution","page":"API Reference","title":"UncertainHistogramming.ContinuousDistribution","text":"abstract type ContinuousDistribution end\n\nConcept establishing what a continuous distribution is within the code base.\n\n\n\n\n\n","category":"type"},{"location":"api/#UncertainHistogramming.ContinuousHistogram","page":"API Reference","title":"UncertainHistogramming.ContinuousHistogram","text":"abstract type ContinuousHistogram end\n\nabstract type representing the ContinuousHistogram concept. These are histograms whose input data have uncertainty associated with them, and therefore we build them using a value-error-dependent kernel for each entry.\n\n\n\n\n\n","category":"type"},{"location":"api/#UncertainHistogramming.GaussianDistribution","page":"API Reference","title":"UncertainHistogramming.GaussianDistribution","text":"GaussianDistribution <: ContinuousDistribution\n\nTrait representing a Gaussian distribution.\n\n\n\n\n\n","category":"type"},{"location":"api/#UncertainHistogramming.GaussianHistogram","page":"API Reference","title":"UncertainHistogramming.GaussianHistogram","text":"GaussianHistogram{T <: Number} <: ContinuousHistogram\n\nA ContinuousHistogram with a Gaussian kernel for each value-error pair.\n\nThis [ContinuousHistogram] is formed by summing Gaussian kernels for each (mu_i sigma_i) as\n\nmathcalH(y) = frac1M sum_i = 1^M frac expleft -frac left( y - mu_i right)^2 2 sigma_i^2 right  sigma_i sqrt2pi\n\nThis expression makes the calculation of the non-central moments a simple mean of the  individual non-central moments.\n\nContents\n\nmoments::Vector{T}: a collection of moments for the GaussianHistogram which are updated in an online fashion\nvalues::Vector{T}: the values used to construct the GaussianHistogram\nerrors::Vector{T}: the errors used to construct the GaussianHistogram\n\nnote: Note\nThe statistics come from calculations involving the moments. The values and  errors are necessarily stored for visualization purposes.\n\n\n\n\n\n","category":"type"},{"location":"api/#UncertainHistogramming.Moment","page":"API Reference","title":"UncertainHistogramming.Moment","text":"abstract type Moment end\n\nConcept representing non-central statistical moments.\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.eltype-Union{Tuple{GaussianHistogram{T}}, Tuple{T}} where T","page":"API Reference","title":"Base.eltype","text":"eltype(::GaussianHistogram{T}) where {T} = Test\n\nBase overload for accessing the eltype.\n\n\n\n\n\n","category":"method"},{"location":"api/#Base.getindex","page":"API Reference","title":"Base.getindex","text":"getindex(::GaussianHistogram, ::Type{<: Moment})\n\nConvenience function to access a given Moment from its name.\n\njulia> hist = GaussianHistogram();\n\njulia> push!(hist, (0, 1))\nGaussianHistogram{Float64}:\n  length  = 1\n  moments = 0.0  1.0  0.0  3.0  \n\n  Statistics\n    mean        = 0.0\n    variance    = 1.0\n    skewness    = 0.0\n    kurtosis    = 0.0\n\njulia> hist[FirstMoment]\n0.0\n\njulia> hist[SecondMoment]\n1.0\n\njulia> hist[ThirdMoment]\n0.0\n\njulia> hist[FourthMoment]\n3.0\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.length-Tuple{GaussianHistogram}","page":"API Reference","title":"Base.length","text":"length(::GaussianHistogram)\n\nBase overload to return the length of the values Vector in the argument GaussianHistogram.\n\n\n\n\n\n","category":"method"},{"location":"api/#Base.push!-Tuple{GaussianHistogram, Tuple{Number, Number}}","page":"API Reference","title":"Base.push!","text":"push!(::GaussianHistogram, ::Tuple{Number, Number})\npush!(::GaussianHistogram, ::Measurement)\npush!(::GaussianHistogram, ::AbstractVector)\npush!(::GaussianHistogram, ::Vector{Measurement})\n\nBase overload to introduce a new value-error pair into the GaussianHistogram. This function also _update_moments! in an amortized way to add little overhead.\n\nnote: Note\nThe AbstractVector dispatch is really only meant for Vector{Tuple{Number, Number}};  the latter of which contains no subtypes.\n\n\n\n\n\n","category":"method"},{"location":"api/#Base.setindex!","page":"API Reference","title":"Base.setindex!","text":"setindex!(::GaussianHistogram{T}, val::S, ::Type{<: Moment}) where {T, S}\n\nConvenience function for accessing the GaussianHistogram Moments from their name.\n\nwarning: Warning\nThis functionality should only be used internally as modifying the GaussianHistogram moments directly would invalidate the push! pipeline and ultimately the statistics.But it's here if you need it for some dev reason.\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.show-Tuple{IO, GaussianHistogram}","page":"API Reference","title":"Base.show","text":"show([::IO = stdout], ::GaussianHistogram)\nshow(::GaussianHistogram)\n\nprint the relevant information for a GaussianHistogram.\n\n\n\n\n\n","category":"method"},{"location":"api/#Measurements.measurement-Tuple{GaussianHistogram}","page":"API Reference","title":"Measurements.measurement","text":"measurement(::GaussianHistogram)\n\nInterface to Measurements.jl.  Return a Measurement with val as the GaussianHistogram mean and the  err as the GaussianHistogram std (standard deviation).\n\n\n\n\n\n","category":"method"},{"location":"api/#Statistics.mean-Tuple{GaussianHistogram}","page":"API Reference","title":"Statistics.mean","text":"mean(::GaussianHistogram)\n\nFirst moment of the GaussianHistogram.\n\n\n\n\n\n","category":"method"},{"location":"api/#Statistics.std-Tuple{GaussianHistogram}","page":"API Reference","title":"Statistics.std","text":"std(::GaussianHistogram)\n\nThe standard deviation of the GaussianHistogram.\n\n\n\n\n\n","category":"method"},{"location":"api/#Statistics.var-Tuple{GaussianHistogram}","page":"API Reference","title":"Statistics.var","text":"var(::GaussianHistogram)\n\nSecond cumulant of the GaussianHistogram.\n\n\n\n\n\n","category":"method"},{"location":"api/#StatsBase.kurtosis","page":"API Reference","title":"StatsBase.kurtosis","text":"kurtosis(::GaussianHistogram [, excess = true ])\n\nPearson (excess) kurtosis of a GaussianHistogram.\n\nnote: Note\nFor comparison purposes, this kurtosis definition, with excess == true, applied to a  Gaussian distribution yields 0. If excess == false, then the kurtosis for a Gaussian is 3.\n\n\n\n\n\n","category":"function"},{"location":"api/#StatsBase.skewness-Tuple{GaussianHistogram}","page":"API Reference","title":"StatsBase.skewness","text":"skewness(::GaussianHistogram)\n\nFisher's skewness of a GaussianHistogram.\n\nnote: Note\nFor comparison purposes, this skewness definition applied to a Gaussian distribution yields identically zero.\n\n\n\n\n\n","category":"method"},{"location":"api/#UncertainHistogramming.MomentIndex-Tuple{Type{<:UncertainHistogramming.Moment}}","page":"API Reference","title":"UncertainHistogramming.MomentIndex","text":"MomentIndex(::Type{<: Moment}) = -1\n\nMapping from <: Moment traits to indexable integers. \n\n\n\n\n\n","category":"method"},{"location":"api/#UncertainHistogramming._online_mean-Tuple{Any, Any, Any}","page":"API Reference","title":"UncertainHistogramming._online_mean","text":"_online_mean(xnew, μold, nold)\n\nUpdate the old mean μold over nold elements with the new data point xnew. This function implements\n\nmu_n+1 = mu_n + fracx_n+1 - mu_nn+1\n\n\n\n\n\n","category":"method"},{"location":"api/#UncertainHistogramming._update_moment!-Tuple{GaussianHistogram, Any, Any, Any}","page":"API Reference","title":"UncertainHistogramming._update_moment!","text":"_update_moment!(::GaussianHistogram, moment_t, μ, σ)\n\nUpdate the GaussianHistogram's moment_t using an _online_mean with the inclusion of the value-error pair (μ, σ).\n\n\n\n\n\n","category":"method"},{"location":"api/#UncertainHistogramming._update_moments!-Tuple{GaussianHistogram, Any, Any}","page":"API Reference","title":"UncertainHistogramming._update_moments!","text":"_update_moments!(::GaussianHistogram, μ, σ)\n\nUpdate the the non-central moments of the GaussianHistogram online with the new value-error pair (μ, σ). This is done because each is non-central moment is the mean non-central moments of each GaussianDistribution.\n\n\n\n\n\n","category":"method"},{"location":"api/#UncertainHistogramming.construct!-Tuple{Any, GaussianHistogram, Any}","page":"API Reference","title":"UncertainHistogramming.construct!","text":"construct!(output, ::GaussianHistogram, x)\n\nSimilar to construct but here, the output Array is modified in-place.\n\n\n\n\n\n","category":"method"},{"location":"api/#UncertainHistogramming.construct-Tuple{GaussianHistogram, Any}","page":"API Reference","title":"UncertainHistogramming.construct","text":"construct(::GaussianHistogram, x)\n\nMap the values of x through the [GaussianHistogram] and return an Array of the same size as x.\n\n\n\n\n\n","category":"method"},{"location":"api/#UncertainHistogramming.gaussian-Tuple{Number, Any, Any}","page":"API Reference","title":"UncertainHistogramming.gaussian","text":"gaussian(::Number, μ, σ)\ngaussian(::AbstractArray, μ, σ)\n\nCalculate the normalized value of a Gaussian with mean μ and variance σ².\n\n\n\n\n\n","category":"method"},{"location":"api/#UncertainHistogramming.kernel-Tuple{ContinuousHistogram, Vararg{Any}}","page":"API Reference","title":"UncertainHistogramming.kernel","text":"kernel(::ContinuousHistogram, ::AbstractArray, data) -> MethodError\nkernel(::GaussianHistogram, ::AbstractArray, data)\n\nThe kernel function mathcalK(x) used to compute a ContinuousHistogram such that\n\nmathcalH(x) = sum_i = 1^M mathcalK_i(x)\n\nwhere M is the total number of data points. For brevity, we have represented all data-dependence through the subscript i. \n\nnote: Note\nBy default, we MethodError out for any <: ContinuousHistogram until its directly implemented.\n\n\n\n\n\n","category":"method"},{"location":"api/#UncertainHistogramming.moment","page":"API Reference","title":"UncertainHistogramming.moment","text":"moment(::GaussianHistogram, ::Type{<: Moment})\n\nConvenience wrapper to return a Moment from a GaussianHistogram  by that Moment's name.\n\njulia> hist = GaussianHistogram();\n\njulia> push!(hist, (0, 1))\nGaussianHistogram{Float64}:\n  length  = 1\n  moments = 0.0  1.0  0.0  3.0  \n\n  Statistics\n    mean        = 0.0\n    variance    = 1.0\n    skewness    = 0.0\n    kurtosis    = 0.0\n\njulia> moment(hist, FirstMoment)\n0.0\n\njulia> moment(hist, SecondMoment)\n1.0\n\njulia> moment(hist, ThirdMoment)\n0.0\n\njulia> moment(hist, FourthMoment)\n3.0\n\n\n\n\n\n","category":"function"},{"location":"api/#UncertainHistogramming.moment-Tuple{Type{UncertainHistogramming.GaussianDistribution}, Type{FirstMoment}, Any, Any}","page":"API Reference","title":"UncertainHistogramming.moment","text":"moment(::Type{GaussianDistribution}, FirstMoment, μ, σ)\n\nAnalytic expression for the no-central FirstMoment from a GaussianDistribution:\n\nM_1 = int_-infty^infty rm dy G(ymusigma)cdot y = mu \n\n\n\n\n\n","category":"method"},{"location":"api/#UncertainHistogramming.moment-Tuple{Type{UncertainHistogramming.GaussianDistribution}, Type{FourthMoment}, Any, Any}","page":"API Reference","title":"UncertainHistogramming.moment","text":"moment(::Type{GaussianDistribution}, FourthMoment, μ, σ)\n\nAnalytic expression for the no-central FourthMoment from a GaussianDistribution:\n\nM_4 = int_-infty^infty rm dy G(ymusigma)cdot y^4 = mu^4 + 6mu^2sigma^2 + 3sigma^4 \n\n\n\n\n\n","category":"method"},{"location":"api/#UncertainHistogramming.moment-Tuple{Type{UncertainHistogramming.GaussianDistribution}, Type{SecondMoment}, Any, Any}","page":"API Reference","title":"UncertainHistogramming.moment","text":"moment(::Type{GaussianDistribution}, SecondMoment, μ, σ)\n\nAnalytic expression for the no-central SecondMoment from a GaussianDistribution:\n\nM_2 = int_-infty^infty rm dy G(ymusigma)cdot y^2 = mu^2 + sigma^2 \n\n\n\n\n\n","category":"method"},{"location":"api/#UncertainHistogramming.moment-Tuple{Type{UncertainHistogramming.GaussianDistribution}, Type{ThirdMoment}, Any, Any}","page":"API Reference","title":"UncertainHistogramming.moment","text":"moment(::Type{GaussianDistribution}, ThirdMoment, μ, σ)\n\nAnalytic expression for the no-central ThirdMoment from a GaussianDistribution:\n\nM_3 = int_-infty^infty rm dy G(ymusigma)cdot y^3 = mu^3 + 3musigma^2 \n\n\n\n\n\n","category":"method"},{"location":"api/#UncertainHistogramming.val_err-Tuple{GaussianHistogram, Any}","page":"API Reference","title":"UncertainHistogramming.val_err","text":"val_err(::GaussianHistogram, idx)\n\nReturn a (value, error)-Tuple.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = UncertainHistogramming","category":"page"},{"location":"#UncertainHistogramming-[![GithubLink](assets/GitHub-Mark-Light-32px.png)](https://github.com/meese-wj/UncertainHistogramming.jl)","page":"Home","title":"UncertainHistogramming (Image: GithubLink)","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Stable) (Image: Dev) (Image: Build Status)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Have you ever had a situation where you need to visualize a set of data as a histogram, except the data you have to visualize are each endowed with some amount of uncertainty? If so, this package is for you! UncertainHistogramming.jl is a lightweight Julia package to plot a density function for a given set of values with known uncertainties.","category":"page"},{"location":"#Background-Information","page":"Home","title":"Background Information","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"An example application of the main exported abstract struct, ContinuousHistogram, is to visualize a \"histogram\" of experimental values, when each value has a measured experimental uncertainty. This is to be contrast with normal Histogramming that assumes that each value is exact, meaning its uncertainty is zero().","category":"page"},{"location":"","page":"Home","title":"Home","text":"For me, the need for this package first came about when I was running Monte Carlo simulations, where I needed to understand the underlying distribution of some observables. But, as anybody who has ever played around with Monte Carlo methods knows, each observable has a certain amount of statistical error. Thus, any regular histogram I would make when ignoring these statistical errors would not really expose the true distribution, as each data point could not entirely be claimed by a single histogram bin. So I invented the ContinuousHistogram as a somewhat tongue-in-cheek generalization of the regular histogram that takes data uncertainty into account.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package provides similar functionality to what is expected from kernel density estimation (KDE), but here the data errors/uncertainties which act as the kernel bandwidths are all, in principle, different.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Currently, the only ContinuousHistogram/kernel pair are based on gaussians, where each value-error pair are the mean and standard deviation of that gaussian. In the future I plan to implement a couple of other subtypes of ContinuousHistograms, but for right now, everything is normal. :-P","category":"page"},{"location":"#Example-Usage","page":"Home","title":"Example Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"An example GaussianHistogram <: ContinuousHistogram can be constructed from the following Julia code for a simple Vector of value-error Tuples.","category":"page"},{"location":"","page":"Home","title":"Home","text":"To start, first include the following packages:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Plots # One must Pkg.add this separately\nusing UncertainHistogramming\nPlots.gr()  # Use GR to reproduce the plot exactly\nnothing # hide","category":"page"},{"location":"","page":"Home","title":"Home","text":"Next, define a list of (value, error)-Tuples:","category":"page"},{"location":"","page":"Home","title":"Home","text":"values_errors = [(-3.5, 0.5), \n                 (-1.5, 0.75),\n                 (0, 0.25), \n                 (1.5, 0.75), \n                 (3.5, 0.5)]\nnothing # hide","category":"page"},{"location":"","page":"Home","title":"Home","text":"From here, we're in the position to initialize a GaussianHistogram and push! the values_errors Vector into it.","category":"page"},{"location":"","page":"Home","title":"Home","text":"hist = GaussianHistogram()\npush!(hist, values_errors)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note that the non-central statistical moments are updated in an online matter. This means that, aside from the overhead associated with push!ing two elements into the GaussianHistogram's values and errors Vectors, there is an amortized cost associated with computing the statistics.","category":"page"},{"location":"","page":"Home","title":"Home","text":"From here, we just need to define an input domain for the GaussianHistogram to be computed over as","category":"page"},{"location":"","page":"Home","title":"Home","text":"x = LinRange(-6, 6, 3000)","category":"page"},{"location":"","page":"Home","title":"Home","text":"and then, with the help of Plots.jl and RecipesBase.jl, we have","category":"page"},{"location":"","page":"Home","title":"Home","text":"plot(x, hist)","category":"page"},{"location":"","page":"Home","title":"Home","text":"In the plot, one can see that the GaussianHistogram is plotted as the solid blue curve, and the individual gaussian kernels that make it up are plotted as the dashed orange curves.","category":"page"},{"location":"","page":"Home","title":"Home","text":"note: Note\nOne may also supply the keyword argument nkernels to plot(x, hist) to change the number of kernels displayed. By default, nkernels == 5. If the number of value-error pairs exceeds nkernels, that is nkernels < length(hist), then no kernels will be shown to save the end user from trying to understand and overly busy plot.","category":"page"},{"location":"#Add-[UncertainHistogramming.jl](https://github.com/meese-wj/UncertainHistogramming.jl)-to-your-Julia-environment","page":"Home","title":"Add UncertainHistogramming.jl to your Julia environment","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To add UncertainHistogramming.jl simply press ] in the Julia REPL to enter pkg mode and type","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add UncertainHistogramming","category":"page"},{"location":"","page":"Home","title":"Home","text":"and presto! You now have full access to UncertainHistogramming.jl.","category":"page"}]
}
